        -:    0:Source:/home/antoine/Documents/Developpement/c/stealth/src/model/Guard.c
        -:    0:Graph:/home/antoine/Documents/Developpement/c/stealth/cmake-build-debug-coverage/CMakeFiles/stealth.dir/src/model/Guard.c.gcno
        -:    0:Data:/home/antoine/Documents/Developpement/c/stealth/cmake-build-debug-coverage/CMakeFiles/stealth.dir/src/model/Guard.c.gcda
        -:    0:Runs:1
        -:    1:#include "model/Guard.h"
        -:    2:
function guard_init called 10 returned 100% blocks executed 100%
       10:    3:void guard_init(Guard *guard, int x, int y) {
       10:    4:    position_init(&guard->position, x, y);
       10:    4-block  0
call    0 returned 10
       10:    5:    guard->speed = float_rand(GUARD_MIN_SPEED, GUARD_MAX_SPEED);
call    0 returned 10
       10:    6:    guard->direction = STILL;
       10:    7:    guard->panic_mode = 0;
       10:    8:    guard->panic_count = 0; /* To count the time he has been in panic mode*/
       10:    9:}
        -:   10:
function guard_update_speed called 12414 returned 100% blocks executed 89%
    12414:   11:void guard_update_speed(Guard *guard){
   12414*:   12:    assert(guard);
    12414:   12-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 12414
    %%%%%:   12-block  1
call    2 never executed
    12414:   13:    double speed = guard->speed;
    12414:   14:    if(int_rand(0, 99) <= GUARD_NEW_DIR_PROBABILITY * 100){
    12414:   14-block  0
call    0 returned 12414
branch  1 taken 373 (fallthrough)
branch  2 taken 12041
      373:   15:        speed = float_rand(GUARD_MIN_SPEED, GUARD_MAX_SPEED);
      373:   15-block  0
call    0 returned 373
        -:   16:    }
    12414:   17:    if(guard->panic_mode){
    12414:   17-block  0
branch  0 taken 7499 (fallthrough)
branch  1 taken 4915
     7499:   18:        speed = GUARD_PANIC_SPEED;
     7499:   18-block  0
        -:   19:    }
    12414:   20:    guard->speed = speed;
    12414:   21:}
        -:   22:
function guard_update_direction called 12414 returned 100% blocks executed 88%
    12414:   23:Direction guard_update_direction(Guard *guard){
   12414*:   24:    assert(guard);
    12414:   24-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 12414
    %%%%%:   24-block  1
call    2 never executed
    12414:   25:    if(int_rand(0, 99) <= GUARD_NEW_DIR_PROBABILITY * 100){
    12414:   25-block  0
call    0 returned 12414
branch  1 taken 367 (fallthrough)
branch  2 taken 12047
      367:   26:        return guard->direction = int_rand(STILL, NO);
      367:   26-block  0
call    0 returned 367
        -:   27:    }
    12047:   28:    return guard->direction;
    12047:   28-block  0
        -:   29:}
        -:   30:
function guard_view_range called 41160 returned 100% blocks executed 100%
    41160:   31:double guard_view_range(const Guard *guard){
    41160:   32:    if(guard->panic_mode)
    41160:   32-block  0
branch  0 taken 27481 (fallthrough)
branch  1 taken 13679
    27481:   33:        return GUARD_PANIC_VIEW_RANGE;
    27481:   33-block  0
    13679:   34:    return GUARD_VIEW_RANGE;
    13679:   34-block  0
        -:   35:}
        -:   36:
function guard_panic called 5 returned 100% blocks executed 67%
        5:   37:void guard_panic(Guard *guard){
       5*:   38:    assert(guard);
        5:   38-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 5
    %%%%%:   38-block  1
call    2 never executed
        5:   39:    guard->panic_mode = 1;
        5:   40:}
        -:   41:
function guard_unpanic called 0 returned 0% blocks executed 0%
    #####:   42:void guard_unpanic(Guard *guard){
    #####:   43:    assert(guard);
    %%%%%:   43-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   43-block  1
call    2 never executed
    #####:   44:    guard->panic_mode = 0;
    #####:   45:}
        -:   46:
function guard_reset_panic_count called 10 returned 100% blocks executed 67%
       10:   47:void guard_reset_panic_count(Guard *guard){
      10*:   48:    assert(guard);
       10:   48-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 10
    %%%%%:   48-block  1
call    2 never executed
       10:   49:    guard->panic_count = 0;
       10:   50:}
        -:   51:
function guard_update_panic_count called 10539 returned 100% blocks executed 62%
    10539:   52:void guard_update_panic_count(Guard *guard){
   10539*:   53:    assert(guard);
    10539:   53-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 10539
    %%%%%:   53-block  1
call    2 never executed
    10539:   54:    if (guard->panic_mode){
    10539:   54-block  0
branch  0 taken 6044 (fallthrough)
branch  1 taken 4495
     6044:   55:        if (guard->panic_count >= GUARD_PANIC_DURATION){
     6044:   55-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 6044
    #####:   56:            guard_reset_panic_count(guard);
    %%%%%:   56-block  0
call    0 never executed
    #####:   57:            guard_unpanic(guard);
call    0 never executed
        -:   58:        }
     6044:   59:        guard->panic_count += 1;
     6044:   59-block  0
        -:   60:    }
    10539:   61:}
        -:   62:
        -:   63:
function guard_is_panicking called 6339 returned 100% blocks executed 100%
     6339:   64:int guard_is_panicking(const Guard *guard){
     6339:   65:    return guard->panic_mode;
     6339:   65-block  0
        -:   66:}
