        -:    0:Source:/home/antoine/Documents/Developpement/c/stealth/src/model/Score.c
        -:    0:Graph:/home/antoine/Documents/Developpement/c/stealth/cmake-build-debug-coverage/CMakeFiles/stealth.dir/src/model/Score.c.gcno
        -:    0:Data:/home/antoine/Documents/Developpement/c/stealth/cmake-build-debug-coverage/CMakeFiles/stealth.dir/src/model/Score.c.gcda
        -:    0:Runs:1
        -:    1:/*
        -:    2: *   This file is part of Stealth game
        -:    3: *    Yann ROUX--DAUGROIS
        -:    4: *   and Antoine Bastos
        -:    5: *   SPDX-License-Identifier: Apache-2.0
        -:    6: */
        -:    7:
        -:    8:#include "model/Score.h"
        -:    9:#include "core/Timer.h"
        -:   10:
function score_read called 8 returned 100% blocks executed 86%
        8:   11:size_t score_read(const char *path, Score *scores, int n){
        8:   12:    FILE *fp = fopen(path, "rb");
        8:   12-block  0
call    0 returned 8
        8:   13:    if (!fp) {
branch  0 taken 0 (fallthrough)
branch  1 taken 8
        -:   14:        /*perror("fopen");*/
    #####:   15:        return 0;
    %%%%%:   15-block  0
        -:   16:    }
        8:   17:    size_t ret = fread(scores, sizeof(Score), n, fp);
        8:   17-block  0
call    0 returned 8
        8:   18:    fclose(fp);
call    0 returned 8
        8:   19:    return ret;
        -:   20:}
        -:   21:
function score_write called 2 returned 100% blocks executed 86%
        2:   22:size_t score_write(const char *path, Score *scores, int n){
        2:   23:    FILE *fp = fopen(path, "wb");
        2:   23-block  0
call    0 returned 2
        2:   24:    if (!fp) {
branch  0 taken 0 (fallthrough)
branch  1 taken 2
        -:   25:        /*perror("fopen");*/
    #####:   26:        return 0;
    %%%%%:   26-block  0
        -:   27:    }
        2:   28:    size_t ret = fwrite(scores, sizeof(Score), n, fp);
        2:   28-block  0
call    0 returned 2
        2:   29:    fclose(fp);
call    0 returned 2
        2:   30:    return ret;
        -:   31:}
        -:   32:
function score_cmp_mana called 47 returned 100% blocks executed 100%
       47:   33:int score_cmp_mana(const void *s1, const void *s2){
       47:   34:    return ((const Score *) s1)->mana - ((const Score*) s2)->mana;
       47:   34-block  0
        -:   35:}
        -:   36:
function score_cmp_time called 47 returned 100% blocks executed 100%
       47:   37:int score_cmp_time(const void *s1, const void *s2){
       47:   38:    long test =  ((const Score *) s1)->time - ((const Score*) s2)->time;
       47:   39:    return test == 0 ? 0 : test < 0 ? -1 : 1;
       47:   39-block  0
branch  0 taken 21 (fallthrough)
branch  1 taken 26
       21:   39-block  1
branch  2 taken 15 (fallthrough)
branch  3 taken 6
       15:   39-block  2
        6:   39-block  3
       21:   39-block  4
       26:   39-block  5
       47:   39-block  6
        -:   40:}
        -:   41:
function score_get_mana called 7307 returned 100% blocks executed 100%
     7307:   42:int score_get_mana(const Score *score){
     7307:   43:    return score->mana;
     7307:   43-block  0
        -:   44:}
function score_get_time called 7307 returned 100% blocks executed 100%
     7307:   45:long score_get_time(const Score *score){
     7307:   46:    return score->time;
     7307:   46-block  0
        -:   47:}
        -:   48:
function score_sprintf_mana called 7307 returned 100% blocks executed 100%
     7307:   49:void score_sprintf_mana(const Score *score, char *buff){
     7307:   50:    sprintf(buff, "%20d", score_get_mana(score));
     7307:   50-block  0
call    0 returned 7307
     7307:   51:}
        -:   52:
function score_sprintf_time called 7307 returned 100% blocks executed 100%
     7307:   53:void score_sprintf_time(const Score *score, char *buff){
        -:   54:    Timer timer;
     7307:   55:    timer_from_epoch(score_get_time(score), &timer);
     7307:   55-block  0
call    0 returned 7307
call    1 returned 7307
     7307:   56:    timer_sprintf(&timer, buff);
call    0 returned 7307
     7307:   57:}
